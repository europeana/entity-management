# mongodb
mongo.connectionUrl = mongodb://<host>:<port>
mongo.em.database = <entity-management-db>
mongo.batch.database = <spring-batch-db>
mongo.truststore = <truststore-file-or-empty>
mongo.truststore.pwd =

#solr connectivity 
#solr url for the indexing entities (superseeded by entitymanagement.solr.indexing.zookeeper.url if present)
#entitymanagement.solr.indexing.url=

#zookeeper url for the indexing entities
entitymanagement.solr.indexing.zookeeper.url=

#Base URL for dereferencing service
#metis.baseUrl=

# Schedules periodic update of entities
#if missing it will be interpreted as true
#set property to false to disable scheduling
#batch.scheduling.enabled = false

# number of EntityRecords to process in one commit-interval (before writing to the database)
batch.chunkSize=10

batch.step.chunkSize=100

# Whether entity metrics should be computed. This requires access to the Pagerank and
# Search API Solr servers.
batch.computeMetrics=false

# Whether user requests should be authenticated. Requires Keycloak public key and ApiKey URL if "true"
auth.read.enabled=false
auth.write.enabled=false

# Resource name embedded in JWT token
authorization.api.name=entities

# API Key URL
europeana.apikey.serviceurl=

# Keycloak public key used for verifying JWTs
europeana.apikey.jwttoken.signaturekey=

#url for the search api
europeana.searchapi.urlPrefix=https://<api_endpoint>/record/v2/search.json?wskey=<API_KEY>

#enable/disable generation of entity ids for organizations (should be enabled only in productive environment)
#zoho.generate.organization.europeanaid=false

#offset (days before last sync) for fetching deleted organizations 
#zoho.sync.delete.offset.days=0

#configuration files for zoho country and role mappings 
#zoho.country.mapping=zoho_country_mapping.json
#zoho.role.mapping=zoho_role_mapping.json
#europeana.role.vocabulary=role_vocabulary.xml

#optional, webhook to send messages (i.e. ZohoSyncReport) to slack channels 
#slack.webhook